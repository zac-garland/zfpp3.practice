arm = ARIMA(seas)) %>%
reconcile(
bu = bottom_up(base),
bu_ar = bottom_up(arm),
mint = min_trace(base, method = "mint_shrink"),
mint_ar = min_trace(arm, method = "mint_shrink")
)
fc <- fit %>% forecast(h = "2 years")
fc %>%
autoplot(
retail_hts,
level = NULL
) +
labs(y = "Trips ('000)") +
facet_wrap(vars(retail_category), scales = "free_y")
fit %>% accuracy()
fc %>% accuracy()
fc %>%
autoplot(
retail_hts,
level = NULL
) +
labs(y = "Trips ('000)") +
facet_wrap(vars(retail_category), scales = "free_y")
fc
fc %>% as_tibble()
fc %>% as_tibble() %>%
ggplot()
fc %>% as_tibble() %>%
ggplot(aes(date,seas))
fc %>% as_tibble() %>%
ggplot(aes(date,seas))+
geom_line()
fc %>% as_tibble() %>%
ggplot(aes(date,seas))+
geom_line()+
facet_wrap(~retail_category)
fc %>% as_tibble() %>%
mutate(date = as_date(date))
fc %>% as_tibble() %>%
mutate(date = as_date(date),seas = as.double(seas))
fc %>% as_tibble() %>%
mutate(date = as_date(date),seas = as.double(seas)) %>%
plotly::plot_ly(
x = ~date,
y = ~.mean
)
fc %>% as_tibble() %>%
mutate(date = as_date(date)) %>%
split(.$retail_category) %>%
map(~{
hchart("line",hcaes(date,.mean))
}) %>%
hw_grid()
fc %>% as_tibble() %>%
mutate(date = as_date(date)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,.mean))
}) %>%
hw_grid()
fc %>% as_tibble() %>%
mutate(date = as_date(date))
fc %>% as_tibble() %>%
ungroup()
fc %>% as.data.frame()
fc %>% as.data.frame() %>%
as_tibble()
fc %>% as.data.frame() %>%
as_tibble()
mutate(date = as_date(date)) %>%
split(.$retail_category)
fc %>%
as_tibble() %>%
mutate(date = as_date(date)) %>%
split(.$retail_category)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category))
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,.mean))
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,.mean))
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
plotly::plot_ly(x = ~date, y =~.mean) %>%
plotly::add_lines()
}) %>%
subplot()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
plotly::plot_ly(x = ~date, y =~.mean) %>%
plotly::add_lines()
}) %>%
plotly::subplot()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
plotly::plot_ly(x = ~date, y =~.mean,color = .model) %>%
plotly::add_lines()
}) %>%
plotly::subplot()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
plotly::add_lines()
}) %>%
plotly::subplot(nrows = 4)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,.mean,group = .model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
clean_names()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,mean,group = model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,mean,group = model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
})
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
.[3]
.x %>%
hchart("line",hcaes(date,mean,group = model))
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
.[3] %>%
map(~{
.x %>%
hchart("line",hcaes(date,mean,group = model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
.[3] %>% print(n = nrow(.))
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
.[3] %>% map(~print(n = nrow(.)))
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
split(.$retail_category) %>%
.[3] %>% map(~.x %>% print(n = nrow(.)))
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
select(-seas)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
select(-seas) %>%
split(.$retail_category) %>%
.[3] %>%
map(~{
.x %>%
hchart("line",hcaes(date,mean,group = model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
select(-seas) %>%
split(.$retail_category) %>%
map(~{
.x %>%
hchart("line",hcaes(date,mean,group = model))
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
select(-seas) %>%
split(.$retail_category) %>%
imap(~{
.x %>%
hchart("line",hcaes(date,mean,group = model)) %>%
hc_title(text = .y)
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
plotly::subplot(nrows = 4)
fc %>%
as_tibble() %>%
mutate(date = as_date(date),retail_category = as.character(retail_category)) %>%
janitor::clean_names() %>%
select(-seas) %>%
split(.$retail_category) %>%
imap(~{
.x %>%
hchart("line",hcaes(date,mean,group = model)) %>%
hc_title(text = .y) %>%
hc_tooltip(shared = TRUE)
# plotly::plot_ly(x = ~date, y =~.mean,color = ~.model) %>%
#   plotly::add_lines()
}) %>%
hw_grid()
retail_sales
retail_sales %>% group_by(date) %>% summarize(value = sum(value,na.rm=TRUE))
retail_sales %>% group_by(date) %>% summarize(value = sum(value,na.rm=TRUE)) %>% tail()
643469/626289
retail_hts
fc %>%  inherits()
fc %>%  class()
fc
retail_sales
left_join(retail_sales,retail_hts)
full_join(retail_sales,retail_hts)
full_join(retail_sales,fit)
gert::git_add(".")
gert::git_commit_all("late commit from sat")
gert::git_push()
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
# Chunk 1: setup
## Global options
knitr::opts_chunk$set(cache = TRUE)
# Chunk 2
library(fpp3)
library(fable.prophet)
# Chunk 3
library(fpp3)
ggplot2::theme_set(theme_minimal())
# Chunk 4
recent_production <- aus_production %>%
filter(year(Quarter) >= 2000)
recent_production %>%
gg_lag(Beer, geom = "point") +
labs(x = "lag(Beer, k)")
# Chunk 5
recent_production %>% ACF(Beer, lag_max = 9)
recent_production %>%
ACF(Beer) %>%
autoplot() + labs(title = "Australian beer production")
# Chunk 6
set.seed(30)
y <- tsibble(sample = 1:50, wn = rnorm(50), index = sample)
y %>% autoplot(wn) + labs(title = "White noise", y = "")
y %>%
ACF(wn) %>%
autoplot() + labs(title = "White noise")
# Chunk 7
global_economy %>%
filter(Country == "Australia") %>%
autoplot(GDP / Population) +
labs(title = "GDP per capita", y = "$US")
print_retail <- aus_retail %>%
filter(Industry == "Newspaper and book retailing") %>%
group_by(Industry) %>%
index_by(Year = year(Month)) %>%
summarise(Turnover = sum(Turnover))
aus_economy <- global_economy %>%
filter(Code == "AUS")
print_retail %>%
left_join(aus_economy, by = "Year") %>%
mutate(Adjusted_turnover = Turnover / CPI * 100) %>%
pivot_longer(c(Turnover, Adjusted_turnover),
values_to = "Turnover"
) %>%
mutate(name = factor(name,
levels = c("Turnover", "Adjusted_turnover")
)) %>%
ggplot(aes(x = Year, y = Turnover)) +
geom_line() +
facet_grid(name ~ ., scales = "free_y") +
labs(
title = "Turnover: Australian print media industry",
y = "$AU"
)
lambda <- aus_production %>%
features(Gas, features = guerrero) %>%
pull(lambda_guerrero)
aus_production %>%
autoplot(box_cox(Gas, lambda)) +
labs(
y = "",
title = latex2exp::TeX(paste0(
"Transformed gas production with $\\lambda$ = ",
round(lambda, 2)
))
)
# Chunk 8
us_retail_employment <- us_employment %>%
filter(year(Month) >= 1990, Title == "Retail Trade") %>%
select(-Series_ID)
autoplot(us_retail_employment, Employed) +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
)
dcmp <- us_retail_employment %>%
model(stl = STL(Employed))
components(dcmp)
components(dcmp) %>%
as_tsibble() %>%
autoplot(Employed, colour = "gray") +
geom_line(aes(y = trend), colour = "#D55E00") +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
)
components(dcmp) %>% autoplot()
components(dcmp) %>%
as_tsibble() %>%
autoplot(Employed, colour = "gray") +
geom_line(aes(y = season_adjust), colour = "#0072B2") +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
)
# Chunk 9
global_economy %>%
filter(Country == "Australia") %>%
autoplot(Exports) +
labs(y = "% of GDP", title = "Total Australian exports")
aus_exports <- global_economy %>%
filter(Country == "Australia") %>%
mutate(
`5-MA` = slider::slide_dbl(Exports, mean,
.before = 2, .after = 2, .complete = TRUE
)
)
aus_exports %>%
autoplot(Exports) +
geom_line(aes(y = `5-MA`), colour = "#D55E00") +
labs(
y = "% of GDP",
title = "Total Australian exports"
) +
guides(colour = guide_legend(title = "series"))
beer <- aus_production %>%
filter(year(Quarter) >= 1992) %>%
select(Quarter, Beer)
beer_ma <- beer %>%
mutate(
`4-MA` = slider::slide_dbl(Beer, mean,
.before = 1, .after = 2, .complete = TRUE
),
`2x4-MA` = slider::slide_dbl(`4-MA`, mean,
.before = 1, .after = 0, .complete = TRUE
)
)
us_retail_employment_ma <- us_retail_employment %>%
mutate(
`12-MA` = slider::slide_dbl(Employed, mean,
.before = 5, .after = 6, .complete = TRUE
),
`2x12-MA` = slider::slide_dbl(`12-MA`, mean,
.before = 1, .after = 0, .complete = TRUE
)
)
us_retail_employment_ma %>%
autoplot(Employed, colour = "gray") +
geom_line(aes(y = `2x12-MA`), colour = "#D55E00") +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
)
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive")
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "additive"),
classical_decomposition(Employed)
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
us_retail_employment %>%
model(
classical_decomposition(Employed, type = "multiplicative"),
classical_decomposition(Employed)
) %>%
components() %>%
autoplot() +
labs(title = "Classical additive decomposition of total
US retail employment")
x11_dcmp <- us_retail_employment %>%
model(x11 = X_13ARIMA_SEATS(Employed ~ x11())) %>%
components()
autoplot(x11_dcmp) +
labs(
title =
"Decomposition of total US retail employment using X-11."
)
x11_dcmp %>%
ggplot(aes(x = Month)) +
geom_line(aes(y = Employed, colour = "Data")) +
geom_line(aes(
y = season_adjust,
colour = "Seasonally Adjusted"
)) +
geom_line(aes(y = trend, colour = "Trend")) +
labs(
y = "Persons (thousands)",
title = "Total employment in US retail"
) +
scale_colour_manual(
values = c("gray", "#0072B2", "#D55E00"),
breaks = c("Data", "Seasonally Adjusted", "Trend")
)
x11_dcmp
